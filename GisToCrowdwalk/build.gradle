/**
 * build.gradle
 */

defaultTasks 'clean', 'build', 'copyLibs'

apply plugin: 'java'
apply plugin: 'eclipse'

repositories {
    maven { name = "maven2-repository.dev.java.net"; url = "http://download.java.net/maven/2" }
    maven { name = "osgeo"; url = "http://download.osgeo.org/webdav/geotools/" }
    maven { name = "boundless"; url = "http://repo.boundlessgeo.com/main" }
    mavenCentral()
}

dependencies {
    compile localGroovy()   // Gradleに同梱されているGroovyを使う
    compile 'commons-cli:commons-cli:1.2'
    compile 'commons-codec:commons-codec:1.10'
    compile 'org.apache.xmlgraphics:batik-awt-util:1.8'
    compile 'xalan:xalan:2.7.0'
    compile 'net.arnx:jsonic:1.3.7'
    compile 'com.opencsv:opencsv:3.1'
    compile 'junit:junit:4.12'
    compile 'org.geotools:gt-shapefile:2.7-M3'
    compile 'org.geotools:gt-swing:2.7-M3'
    compile 'org.osgeo:proj4j:0.1.0'
    compile fileTree(dir: 'lib', include: '*.jar')
}

sourceSets {
    main {
        java {
            srcDirs = ["../crowdwalk/src/main/java"];
        }
        resources {
            srcDirs = ["../crowdwalk/src/main/resources"];
        }
    }
}

def defaultEncoding = 'UTF-8'

compileJava {
    options.encoding = defaultEncoding
}

jar {
    manifest.mainAttributes("Main-Class" : "nodagumi.ananPJ.ImportGis")
}

// ※CrowdWalk と同じように一つの jar ファイルにすべて統合すると GeoTools でシェープファイルを読み込む際にエラーが発生するため、ライブラリの jar ファイルを build/libs に配置して、これを参照する様にした。

task copyLibs(type: Copy) {
    from configurations.compile
    into 'build/libs'
}
